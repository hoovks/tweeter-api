generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  username  String    @unique
  email     String    @unique
  password  String
  posts     Post[]
  likes     Like[]
  retweets  Retweet[]
  comments  Comment[]
  following User[]    @relation("Followers")
  followers User[]    @relation("Followers")

}

model Post {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  likes     Like[]
  retweets  Retweet[]
  media     Media[]
  comments   Comment[]
  @@unique([id,authorId])
}

model Comment {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  content   String
  createdAt DateTime @default(now())
  @@unique([id,userId])
}

model Like {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

model Retweet {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

model Media {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  type      MediaType
  url       String
  postId    String
  post      Post      @relation(fields: [postId], references: [id])
}

enum MediaType {
  IMAGE
  VIDEO
}
